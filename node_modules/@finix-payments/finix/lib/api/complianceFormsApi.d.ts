/**
 * Finix API
 */
/// <reference types="node" />
import * as http from 'http';
import { ComplianceForm } from '../model/complianceForm';
import { UpdateComplianceFormRequest } from '../model/updateComplianceFormRequest';
import { Authentication, Interceptor } from '../model/models';
import { HttpBasicAuth } from '../model/models';
export declare enum ComplianceFormsApiApiKeys {
}
export declare class ComplianceFormsApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
        BasicAuth: HttpBasicAuth;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    constructor(username: string, password: string, basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: ComplianceFormsApiApiKeys, value: string): void;
    set username(username: string);
    set password(password: string);
    addInterceptor(interceptor: Interceptor): void;
    /**
     * Helper function.
     * A webhook notifies you when Finix creates a `compliance_form`.  Use the ID in the webhook to fetch the `compliance_form` resource from the `/compliance_forms/:COMPLIANCE_FORM_ID:` endpoint.
     * @summary View Compliance Forms
     * @param complianceFormsId ID of the &#x60;compliance_form&#x60;.
     */
    private listHelper;
    /**
     * A webhook notifies you when Finix creates a `compliance_form`.  Use the ID in the webhook to fetch the `compliance_form` resource from the `/compliance_forms/:COMPLIANCE_FORM_ID:` endpoint.
     * @summary View Compliance Forms
     * @param complianceFormsId ID of the &#x60;compliance_form&#x60;.
     */
    list(complianceFormsId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<ComplianceForm>;
    /**
     * A webhook notifies you when Finix creates a `compliance_form`.  Use the ID in the webhook to fetch the `compliance_form` resource from the `/compliance_forms/:COMPLIANCE_FORM_ID:` endpoint.
     * @summary View Compliance Forms
     * @param complianceFormsId ID of the &#x60;compliance_form&#x60;.
     */
    listHttp(complianceFormsId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ComplianceForm;
        rawBody: any;
    }>;
    /**
     * Helper function.
     * As part of onboarding your users, you\'ll need to build a UI experience that allows users to complete the PCI `compliance_form` and download the form as a PDF if requested.  For more information, see [Managing Compliance Forms](/guides/security-and-compliance/pci-dss-compliance/managing-pci-compliance/#completing-compliance-forms).
     * @summary Complete Compliance Forms
     * @param complianceFormsId ID of the &#x60;compliance_form&#x60;.
     * @param updateComplianceFormRequest
     */
    private updateHelper;
    /**
     * As part of onboarding your users, you\'ll need to build a UI experience that allows users to complete the PCI `compliance_form` and download the form as a PDF if requested.  For more information, see [Managing Compliance Forms](/guides/security-and-compliance/pci-dss-compliance/managing-pci-compliance/#completing-compliance-forms).
     * @summary Complete Compliance Forms
     * @param complianceFormsId ID of the &#x60;compliance_form&#x60;.
     * @param updateComplianceFormRequest
     */
    update(complianceFormsId: string, updateComplianceFormRequest?: UpdateComplianceFormRequest, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<ComplianceForm>;
    /**
     * As part of onboarding your users, you\'ll need to build a UI experience that allows users to complete the PCI `compliance_form` and download the form as a PDF if requested.  For more information, see [Managing Compliance Forms](/guides/security-and-compliance/pci-dss-compliance/managing-pci-compliance/#completing-compliance-forms).
     * @summary Complete Compliance Forms
     * @param complianceFormsId ID of the &#x60;compliance_form&#x60;.
     * @param updateComplianceFormRequest
     */
    updateHttp(complianceFormsId: string, updateComplianceFormRequest?: UpdateComplianceFormRequest, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ComplianceForm;
        rawBody: any;
    }>;
    /**
     * Extracts page and links fields from response body and assigns as properties to finixList
     */
    private embeddedHelper;
    /**
     * Extracts offset value from response body and determines if end of list has been reached
     */
    private getOffsetQueryParam;
    /**
    * Extracts nextCursor value from response body and determines if end of list has been reached
    */
    private getCursorQueryParam;
}
