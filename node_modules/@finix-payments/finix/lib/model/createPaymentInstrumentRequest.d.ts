/**
 * Finix API
 */
import { CreatePaymentInstrumentRequestAddress } from './createPaymentInstrumentRequestAddress';
export declare class CreatePaymentInstrumentRequest {
    'address'?: CreatePaymentInstrumentRequestAddress;
    /**
    * The expiration month of the card (e.g. 12 for December).
    */
    'expirationMonth'?: number;
    /**
    * The 4-digit expiration year of the card.
    */
    'expirationYear'?: number;
    /**
    * The ID of the `Identity` used to create the `Payment Instrument` resource.
    */
    'identity'?: string;
    /**
    * The name of the bank account or card owner.
    */
    'name'?: string;
    /**
    * The card or bank account number (no dashes in between numbers).
    */
    'number'?: string;
    /**
    * The 3-4 digit security code of the card (i.e. CVV code).
    */
    'securityCode'?: string;
    /**
    * Key value pair for annotating custom meta data (e.g. order numbers).
    */
    'tags'?: {
        [key: string]: string;
    } | null;
    /**
    * Type of `Payment Instrument`.
    */
    'type'?: CreatePaymentInstrumentRequest.TypeEnum | string;
    /**
    * Stringified token provided by Google. Required to process Google Pay transactions.
    */
    'thirdPartyToken'?: string;
    /**
    * The bank account number (no dashes in between numbers).
    */
    'accountNumber'?: string;
    /**
    * The type of bank account.
    */
    'accountType'?: CreatePaymentInstrumentRequest.AccountTypeEnum | string;
    /**
    * Set to **true** if you want to request a bank account validation. Default value is **false**.
    */
    'attemptBankAccountValidationCheck'?: boolean;
    /**
    * The routing number of the bank account.
    */
    'bankCode'?: string;
    /**
    * 3 Letter country code (e.g. USA).
    */
    'country'?: string;
    /**
    * ID of the `Token` that was returned from the tokenization client or hosted fields
    */
    'token'?: string;
    /**
    * The `id` of the identity used when registering the business with Google Pay through our registration API.
    */
    'merchantIdentity'?: string;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace CreatePaymentInstrumentRequest {
    enum TypeEnum {
        PaymentCard,
        ApplePay,
        GooglePay,
        Token,
        BankAccount
    }
    enum AccountTypeEnum {
        Checking,
        Savings
    }
}
