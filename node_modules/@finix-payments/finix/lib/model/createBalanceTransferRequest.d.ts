/**
 * Finix API
 */
import { Currency } from './currency';
/**
* Create a `balance_transfer` resource.
*/
export declare class CreateBalanceTransferRequest {
    /**
    * The total amount that will be debited in cents (e.g. 100 cents to debit $1.00).
    */
    'amount': number;
    'currency': Currency;
    /**
    * Additional information about the `balance_transfer` (e.g. **Transferring funds for Holidays**).
    */
    'description': string;
    /**
    * The account where funds get credited. For balance transfers, this is an aliased ID and will have the value of `FOR_BENEFIT_OF_ACCOUNT` or `OPERATING_ACCOUNT`.
    */
    'destination': CreateBalanceTransferRequest.DestinationEnum | string;
    /**
    * Pass **LITLE_V1**; `balance_transfers` are only avalible for platforms with **LITLE_V1** credentials.
    */
    'processorType': string;
    /**
    * The account where funds get debited. For balance transfers, this is an aliased ID and will have the value of `FOR_BENEFIT_OF_ACCOUNT` or `OPERATING_ACCOUNT`.
    */
    'source': CreateBalanceTransferRequest.SourceEnum | string;
    /**
    * Key value pair for annotating custom meta data (e.g. order numbers).
    */
    'tags'?: {
        [key: string]: string;
    } | null;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace CreateBalanceTransferRequest {
    enum DestinationEnum {
        ForBenefitOfAccount,
        OperatingAccount
    }
    enum SourceEnum {
        ForBenefitOfAccount,
        OperatingAccount
    }
}
