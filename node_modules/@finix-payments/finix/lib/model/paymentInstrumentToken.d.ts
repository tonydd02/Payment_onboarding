/**
 * Finix API
 */
import { Currency } from './currency';
import { PaymentInstrumentTokenLinks } from './paymentInstrumentTokenLinks';
export declare class PaymentInstrumentToken {
    /**
    * Key value pair for annotating custom meta data (e.g. order numbers).
    */
    'tags'?: {
        [key: string]: string;
    } | null;
    /**
    * Details if the `Payment Instrument` resource is enabled. Set to `false` to disable the `Payment Instrument`.
    */
    'enabled'?: boolean;
    'type'?: PaymentInstrumentToken.TypeEnum | string;
    /**
    * The ID of the `Payment Instrument`.
    */
    'id'?: string;
    /**
    * Timestamp of when the object was created.
    */
    'createdAt'?: Date;
    /**
    * Timestamp of when the object was last updated.
    */
    'updatedAt'?: Date;
    /**
    * The ID of the `Application` resource the `Payment Instrument` was created under.
    */
    'application'?: string;
    'currency'?: Currency;
    'fingerprint'?: string;
    /**
    * The ID of the `Identity` used to create the `Payment Instrument` resource.
    */
    'identity'?: string;
    'instrumentType'?: PaymentInstrumentToken.InstrumentTypeEnum | string;
    'payloadType'?: PaymentInstrumentToken.PayloadTypeEnum | string;
    'links'?: PaymentInstrumentTokenLinks;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace PaymentInstrumentToken {
    enum TypeEnum {
        Token
    }
    enum InstrumentTypeEnum {
        Token
    }
    enum PayloadTypeEnum {
        Source,
        Destination
    }
}
