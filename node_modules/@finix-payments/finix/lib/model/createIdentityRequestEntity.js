"use strict";
/**
 * Finix API
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateIdentityRequestEntity = void 0;
/**
* The underwriting details required to verify `Identities`.
*/
class CreateIdentityRequestEntity {
    static getAttributeTypeMap() {
        return CreateIdentityRequestEntity.attributeTypeMap;
    }
}
exports.CreateIdentityRequestEntity = CreateIdentityRequestEntity;
CreateIdentityRequestEntity.discriminator = undefined;
CreateIdentityRequestEntity.attributeTypeMap = [
    {
        "name": "annualCardVolume",
        "baseName": "annual_card_volume",
        "type": "number"
    },
    {
        "name": "businessAddress",
        "baseName": "business_address",
        "type": "CreateIdentityRequestEntityBusinessAddress"
    },
    {
        "name": "businessName",
        "baseName": "business_name",
        "type": "string"
    },
    {
        "name": "businessPhone",
        "baseName": "business_phone",
        "type": "string"
    },
    {
        "name": "businessTaxId",
        "baseName": "business_tax_id",
        "type": "string"
    },
    {
        "name": "businessType",
        "baseName": "business_type",
        "type": "CreateIdentityRequestEntity.BusinessTypeEnum"
    },
    {
        "name": "defaultStatementDescriptor",
        "baseName": "default_statement_descriptor",
        "type": "string"
    },
    {
        "name": "dob",
        "baseName": "dob",
        "type": "CreateIdentityRequestEntityDob"
    },
    {
        "name": "doingBusinessAs",
        "baseName": "doing_business_as",
        "type": "string"
    },
    {
        "name": "email",
        "baseName": "email",
        "type": "string"
    },
    {
        "name": "firstName",
        "baseName": "first_name",
        "type": "string"
    },
    {
        "name": "hasAcceptedCreditCardsPreviously",
        "baseName": "has_accepted_credit_cards_previously",
        "type": "boolean"
    },
    {
        "name": "incorporationDate",
        "baseName": "incorporation_date",
        "type": "IdentityEntityFormIncorporationDate"
    },
    {
        "name": "lastName",
        "baseName": "last_name",
        "type": "string"
    },
    {
        "name": "maxTransactionAmount",
        "baseName": "max_transaction_amount",
        "type": "number"
    },
    {
        "name": "mcc",
        "baseName": "mcc",
        "type": "string"
    },
    {
        "name": "ownershipType",
        "baseName": "ownership_type",
        "type": "CreateIdentityRequestEntity.OwnershipTypeEnum"
    },
    {
        "name": "personalAddress",
        "baseName": "personal_address",
        "type": "Address"
    },
    {
        "name": "phone",
        "baseName": "phone",
        "type": "string"
    },
    {
        "name": "principalPercentageOwnership",
        "baseName": "principal_percentage_ownership",
        "type": "number"
    },
    {
        "name": "taxId",
        "baseName": "tax_id",
        "type": "string"
    },
    {
        "name": "title",
        "baseName": "title",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    }
];
(function (CreateIdentityRequestEntity) {
    let BusinessTypeEnum;
    (function (BusinessTypeEnum) {
        BusinessTypeEnum[BusinessTypeEnum["IndividualSoleProprietorship"] = 'INDIVIDUAL_SOLE_PROPRIETORSHIP'] = "IndividualSoleProprietorship";
        BusinessTypeEnum[BusinessTypeEnum["Corporation"] = 'CORPORATION'] = "Corporation";
        BusinessTypeEnum[BusinessTypeEnum["LimitedLiabilityCompany"] = 'LIMITED_LIABILITY_COMPANY'] = "LimitedLiabilityCompany";
        BusinessTypeEnum[BusinessTypeEnum["Partnership"] = 'PARTNERSHIP'] = "Partnership";
        BusinessTypeEnum[BusinessTypeEnum["AssociationEstateTrust"] = 'ASSOCIATION_ESTATE_TRUST'] = "AssociationEstateTrust";
        BusinessTypeEnum[BusinessTypeEnum["TaxExemptOrganization"] = 'TAX_EXEMPT_ORGANIZATION'] = "TaxExemptOrganization";
        BusinessTypeEnum[BusinessTypeEnum["InternationalOrganization"] = 'INTERNATIONAL_ORGANIZATION'] = "InternationalOrganization";
        BusinessTypeEnum[BusinessTypeEnum["GovernmentAgency"] = 'GOVERNMENT_AGENCY'] = "GovernmentAgency";
    })(BusinessTypeEnum = CreateIdentityRequestEntity.BusinessTypeEnum || (CreateIdentityRequestEntity.BusinessTypeEnum = {}));
    let OwnershipTypeEnum;
    (function (OwnershipTypeEnum) {
        OwnershipTypeEnum[OwnershipTypeEnum["Public"] = 'PUBLIC'] = "Public";
        OwnershipTypeEnum[OwnershipTypeEnum["Private"] = 'PRIVATE'] = "Private";
    })(OwnershipTypeEnum = CreateIdentityRequestEntity.OwnershipTypeEnum || (CreateIdentityRequestEntity.OwnershipTypeEnum = {}));
})(CreateIdentityRequestEntity = exports.CreateIdentityRequestEntity || (exports.CreateIdentityRequestEntity = {}));
//# sourceMappingURL=createIdentityRequestEntity.js.map