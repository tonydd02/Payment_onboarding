/**
 * Finix API
 */
import { Name } from './name';
/**
* Details the `Payment Instrument` that the `Transfer` debits or credits.
*/
export declare class CardPresentInstrumentForm {
    /**
    * The type of `Payment Instrument`.
    */
    'type'?: CardPresentInstrumentForm.TypeEnum | string;
    'availableAccountType'?: CardPresentInstrumentForm.AvailableAccountTypeEnum | string;
    /**
    * Encrypted card data used to process the transaction.
    */
    'emvData'?: string;
    /**
    * Encrypted EMV card data about the key serial number used to process the transaction.
    */
    'emvDataKeySerialNumber'?: string;
    /**
    * Encrypted EMV card data. Required if using an encrypted device.
    */
    'encryptedEmvData'?: string;
    /**
    * EMV encryption format provided from integrated encryption devices (defaults to **0**).
    */
    'encryptedEmvFormat'?: number;
    /**
    * Expiration month of the `Payment Instrument` (e.g. 12 for December).
    */
    'expirationMonth'?: number;
    /**
    * 4-digit expiration year of the `Payment Instrument`.
    */
    'expirationYear'?: number;
    /**
    * The first name of the `Payment Instrument` owner.
    */
    'firstName'?: string;
    /**
    * The last name of the `Payment Instrument` owner.
    */
    'lastName'?: string;
    'name'?: Name;
    /**
    * Primary card account number (no dashes in between numbers).
    */
    'number'?: string;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace CardPresentInstrumentForm {
    enum TypeEnum {
        BankAccount,
        Virtual,
        Token,
        SwipedPaymentCard,
        PaymentCardPresent,
        PaymentCard,
        VantivOmniToken
    }
    enum AvailableAccountTypeEnum {
        Balance,
        Ledgered
    }
}
