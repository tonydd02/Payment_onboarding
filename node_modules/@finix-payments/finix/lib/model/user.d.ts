/**
 * Finix API
 */
import { UserLinks } from './userLinks';
export declare class User {
    /**
    * The ID of the `User` object.
    */
    'id'?: string;
    /**
    * Timestamp of when the object was created.
    */
    'createdAt'?: Date;
    /**
    * Timestamp of when the object was last updated.
    */
    'updatedAt'?: Date;
    /**
    * Details if the `User` is enabled and active. Set to **false** to disable the `User`.
    */
    'enabled'?: boolean;
    /**
    * ID of the `Identity` that the `User` object was created under.
    */
    'identity'?: string | null;
    /**
    * The `password` you\'ll use to authetnicate requests.
    */
    'password'?: string | null;
    /**
    * Details the level of access the [`User`](/api/tag/Users) has available.
    */
    'role'?: User.RoleEnum | string;
    /**
    * Key value pair for annotating custom meta data (e.g. order numbers).
    */
    'tags'?: {
        [key: string]: string;
    } | null;
    'links'?: UserLinks;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace User {
    enum RoleEnum {
        Admin,
        Platform,
        Partner,
        Merchant
    }
}
