"use strict";
/**
 * Finix API
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityAdditionalUnderwritingData = void 0;
/**
* Additional underwriting data that\'s required to verify the `Identity`.
*/
class IdentityAdditionalUnderwritingData {
    static getAttributeTypeMap() {
        return IdentityAdditionalUnderwritingData.attributeTypeMap;
    }
}
exports.IdentityAdditionalUnderwritingData = IdentityAdditionalUnderwritingData;
IdentityAdditionalUnderwritingData.discriminator = undefined;
IdentityAdditionalUnderwritingData.attributeTypeMap = [
    {
        "name": "annualAchVolume",
        "baseName": "annual_ach_volume",
        "type": "number"
    },
    {
        "name": "averageAchTransferAmount",
        "baseName": "average_ach_transfer_amount",
        "type": "number"
    },
    {
        "name": "averageCardTransferAmount",
        "baseName": "average_card_transfer_amount",
        "type": "number"
    },
    {
        "name": "businessDescription",
        "baseName": "business_description",
        "type": "string"
    },
    {
        "name": "cardVolumeDistribution",
        "baseName": "card_volume_distribution",
        "type": "IdentityAdditionalUnderwritingDataCardVolumeDistribution"
    },
    {
        "name": "creditCheckAllowed",
        "baseName": "credit_check_allowed",
        "type": "boolean"
    },
    {
        "name": "creditCheckIpAddress",
        "baseName": "credit_check_ip_address",
        "type": "string"
    },
    {
        "name": "creditCheckTimestamp",
        "baseName": "credit_check_timestamp",
        "type": "string"
    },
    {
        "name": "creditCheckUserAgent",
        "baseName": "credit_check_user_agent",
        "type": "string"
    },
    {
        "name": "merchantAgreementAccepted",
        "baseName": "merchant_agreement_accepted",
        "type": "boolean"
    },
    {
        "name": "merchantAgreementIpAddress",
        "baseName": "merchant_agreement_ip_address",
        "type": "string"
    },
    {
        "name": "merchantAgreementTimestamp",
        "baseName": "merchant_agreement_timestamp",
        "type": "string"
    },
    {
        "name": "merchantAgreementUserAgent",
        "baseName": "merchant_agreement_user_agent",
        "type": "string"
    },
    {
        "name": "refundPolicy",
        "baseName": "refund_policy",
        "type": "IdentityAdditionalUnderwritingData.RefundPolicyEnum"
    },
    {
        "name": "volumeDistributionByBusinessType",
        "baseName": "volume_distribution_by_business_type",
        "type": "IdentityAdditionalUnderwritingDataVolumeDistributionByBusinessType"
    }
];
(function (IdentityAdditionalUnderwritingData) {
    let RefundPolicyEnum;
    (function (RefundPolicyEnum) {
        RefundPolicyEnum[RefundPolicyEnum["NoRefunds"] = 'NO_REFUNDS'] = "NoRefunds";
        RefundPolicyEnum[RefundPolicyEnum["MerchandiseExchangeOnly"] = 'MERCHANDISE_EXCHANGE_ONLY'] = "MerchandiseExchangeOnly";
        RefundPolicyEnum[RefundPolicyEnum["Within30Days"] = 'WITHIN_30_DAYS'] = "Within30Days";
        RefundPolicyEnum[RefundPolicyEnum["Other"] = 'OTHER'] = "Other";
    })(RefundPolicyEnum = IdentityAdditionalUnderwritingData.RefundPolicyEnum || (IdentityAdditionalUnderwritingData.RefundPolicyEnum = {}));
})(IdentityAdditionalUnderwritingData = exports.IdentityAdditionalUnderwritingData || (exports.IdentityAdditionalUnderwritingData = {}));
//# sourceMappingURL=identityAdditionalUnderwritingData.js.map