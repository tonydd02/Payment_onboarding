/**
 * Finix API
 */
import { Currency } from './currency';
export declare class CreateFeeRequest {
    /**
    * The total amount that will be debited in cents (e.g. 100 cents to debit $1.00).
    */
    'amount': number;
    'currency': Currency;
    /**
    * Subtype of the fee. Set to **CUSTOM**.
    */
    'feeSubtype': CreateFeeRequest.FeeSubtypeEnum | string;
    /**
    * The type of the fee. Must be set to **CUSTOM**.
    */
    'feeType': CreateFeeRequest.FeeTypeEnum | string;
    /**
    * The display name of the `Fee` that can be used for filtering purposes.
    */
    'label'?: string;
    /**
    * ID of the linked resource
    */
    'linkedId'?: string;
    /**
    * The type of entity the fee is linked to (**null** by default).
    */
    'linkedType'?: CreateFeeRequest.LinkedTypeEnum | string;
    /**
    * The ID of the `Merchant` resource used to create the `Fee`.
    */
    'merchantId': string;
    /**
    * Delays in days, when the `Transfer` the `Fee` creates will be submitted for settlement.
    */
    'settlementDelayDays'?: number | null;
    /**
    * Key value pair for annotating custom meta data (e.g. order numbers).
    */
    'tags'?: {
        [key: string]: string;
    } | null;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace CreateFeeRequest {
    enum FeeSubtypeEnum {
        Custom
    }
    enum FeeTypeEnum {
        Custom
    }
    enum LinkedTypeEnum {
        Application,
        Platform,
        Subscription,
        Transfer
    }
}
