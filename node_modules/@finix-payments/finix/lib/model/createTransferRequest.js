"use strict";
/**
 * Finix API
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateTransferRequest = void 0;
/**
* Create a `transfer`.
*/
class CreateTransferRequest {
    static getAttributeTypeMap() {
        return CreateTransferRequest.attributeTypeMap;
    }
}
exports.CreateTransferRequest = CreateTransferRequest;
CreateTransferRequest.discriminator = undefined;
CreateTransferRequest.attributeTypeMap = [
    {
        "name": "additionalBuyerCharges",
        "baseName": "additional_buyer_charges",
        "type": "AdditionalBuyerCharges"
    },
    {
        "name": "additionalPurchaseData",
        "baseName": "additional_purchase_data",
        "type": "AdditionalPurchaseData"
    },
    {
        "name": "adjustmentRequest",
        "baseName": "adjustment_request",
        "type": "boolean"
    },
    {
        "name": "amount",
        "baseName": "amount",
        "type": "number"
    },
    {
        "name": "currency",
        "baseName": "currency",
        "type": "Currency"
    },
    {
        "name": "destination",
        "baseName": "destination",
        "type": "string"
    },
    {
        "name": "device",
        "baseName": "device",
        "type": "string"
    },
    {
        "name": "deviceConfiguration",
        "baseName": "device_configuration",
        "type": "ConfigurationDetails"
    },
    {
        "name": "fee",
        "baseName": "fee",
        "type": "number"
    },
    {
        "name": "fraudSessionId",
        "baseName": "fraud_session_id",
        "type": "string"
    },
    {
        "name": "hsaFsaPayment",
        "baseName": "hsa_fsa_payment",
        "type": "boolean"
    },
    {
        "name": "idempotencyId",
        "baseName": "idempotency_id",
        "type": "string"
    },
    {
        "name": "merchant",
        "baseName": "merchant",
        "type": "string"
    },
    {
        "name": "operationKey",
        "baseName": "operation_key",
        "type": "CreateTransferRequest.OperationKeyEnum"
    },
    {
        "name": "paymentInstrument",
        "baseName": "payment_instrument",
        "type": "CardPresentInstrumentForm"
    },
    {
        "name": "processor",
        "baseName": "processor",
        "type": "string"
    },
    {
        "name": "source",
        "baseName": "source",
        "type": "string"
    },
    {
        "name": "securityCode",
        "baseName": "security_code",
        "type": "string"
    },
    {
        "name": "statementDescriptor",
        "baseName": "statement_descriptor",
        "type": "string"
    },
    {
        "name": "tags",
        "baseName": "tags",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "_3dSecureAuthentication",
        "baseName": "3d_secure_authentication",
        "type": "CreateTransferRequest3dSecureAuthentication"
    }
];
(function (CreateTransferRequest) {
    let OperationKeyEnum;
    (function (OperationKeyEnum) {
        OperationKeyEnum[OperationKeyEnum["PushToCard"] = 'PUSH_TO_CARD'] = "PushToCard";
        OperationKeyEnum[OperationKeyEnum["PullFromCard"] = 'PULL_FROM_CARD'] = "PullFromCard";
        OperationKeyEnum[OperationKeyEnum["CardPresentDebit"] = 'CARD_PRESENT_DEBIT'] = "CardPresentDebit";
        OperationKeyEnum[OperationKeyEnum["CardPresentUnreferencedRefund"] = 'CARD_PRESENT_UNREFERENCED_REFUND'] = "CardPresentUnreferencedRefund";
        OperationKeyEnum[OperationKeyEnum["Sale"] = 'SALE'] = "Sale";
        OperationKeyEnum[OperationKeyEnum["UnreferencedRefund"] = 'UNREFERENCED_REFUND'] = "UnreferencedRefund";
        OperationKeyEnum[OperationKeyEnum["MerchantCreditAdjustment"] = 'MERCHANT_CREDIT_ADJUSTMENT'] = "MerchantCreditAdjustment";
        OperationKeyEnum[OperationKeyEnum["MerchantDebitAdjustment"] = 'MERCHANT_DEBIT_ADJUSTMENT'] = "MerchantDebitAdjustment";
    })(OperationKeyEnum = CreateTransferRequest.OperationKeyEnum || (CreateTransferRequest.OperationKeyEnum = {}));
})(CreateTransferRequest = exports.CreateTransferRequest || (exports.CreateTransferRequest = {}));
//# sourceMappingURL=createTransferRequest.js.map