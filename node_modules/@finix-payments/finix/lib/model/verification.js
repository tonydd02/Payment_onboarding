"use strict";
/**
 * Finix API
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Verification = void 0;
class Verification {
    static getAttributeTypeMap() {
        return Verification.attributeTypeMap;
    }
}
exports.Verification = Verification;
Verification.discriminator = undefined;
Verification.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "created_at",
        "type": "Date"
    },
    {
        "name": "updatedAt",
        "baseName": "updated_at",
        "type": "Date"
    },
    {
        "name": "application",
        "baseName": "application",
        "type": "string"
    },
    {
        "name": "identity",
        "baseName": "identity",
        "type": "string"
    },
    {
        "name": "merchant",
        "baseName": "merchant",
        "type": "string"
    },
    {
        "name": "merchantIdentity",
        "baseName": "merchant_identity",
        "type": "string"
    },
    {
        "name": "messages",
        "baseName": "messages",
        "type": "Array<object>"
    },
    {
        "name": "paymentInstrument",
        "baseName": "payment_instrument",
        "type": "string"
    },
    {
        "name": "processor",
        "baseName": "processor",
        "type": "string"
    },
    {
        "name": "raw",
        "baseName": "raw",
        "type": "object"
    },
    {
        "name": "state",
        "baseName": "state",
        "type": "Verification.StateEnum"
    },
    {
        "name": "tags",
        "baseName": "tags",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "traceId",
        "baseName": "trace_id",
        "type": "string"
    },
    {
        "name": "links",
        "baseName": "_links",
        "type": "VerificationLinks"
    }
];
(function (Verification) {
    let StateEnum;
    (function (StateEnum) {
        StateEnum[StateEnum["Pending"] = 'PENDING'] = "Pending";
        StateEnum[StateEnum["Succeeded"] = 'SUCCEEDED'] = "Succeeded";
        StateEnum[StateEnum["Failed"] = 'FAILED'] = "Failed";
    })(StateEnum = Verification.StateEnum || (Verification.StateEnum = {}));
})(Verification = exports.Verification || (exports.Verification = {}));
//# sourceMappingURL=verification.js.map