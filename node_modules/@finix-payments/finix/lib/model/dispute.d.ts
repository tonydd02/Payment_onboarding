/**
 * Finix API
 */
import { DisputeLinks } from './disputeLinks';
/**
* A `Dispute` objected created for a chargeback or customer disputes.
*/
export declare class Dispute {
    /**
    * The ID of the `Dispute` resource.
    */
    'id'?: string;
    /**
    * Timestamp of when the object was created.
    */
    'createdAt'?: Date;
    /**
    * Timestamp of when the object was last updated.
    */
    'updatedAt'?: Date;
    /**
    * The next `action` required to move forward with the `Dispute`.
    */
    'action'?: string | null;
    /**
    * The total amount of the `Dispute` (in cents).
    */
    'amount'?: number | null;
    /**
    * The ID of the `Application` resource the `Dispute` was created under.
    */
    'application'?: string;
    /**
    * Details about the `Dispute` recieved by the `Processor`. May be any type of data.
    */
    'disputeDetails'?: {
        [key: string]: any;
    };
    /**
    * The ID of the `Identity` the `Dispute` was created under.
    */
    'identity'?: string;
    /**
    * Message field that provides additional details. This field is typically **null**.
    */
    'message'?: string | null;
    /**
    * Point in time when dispute occurred.
    */
    'occurredAt'?: Date | null;
    /**
    * The system-defined reason for the `Dispute`. Available values include:<ul><li>**INQUIRY**<li>**QUALITY**<li>**FRAUD**
    */
    'reason'?: Dispute.ReasonEnum | string;
    /**
    * Point in time when dispute has to be resolved and the `Merchant` needs to respond by.
    */
    'respondBy'?: Date | null;
    /**
    * The current state of the `Dispute`.
    */
    'state'?: Dispute.StateEnum | string;
    /**
    * Key value pair for annotating custom meta data (e.g. order numbers).
    */
    'tags'?: {
        [key: string]: string;
    } | null;
    /**
    * ID of the `Transfer` resource.
    */
    'transfer'?: string;
    'links'?: DisputeLinks;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace Dispute {
    enum ReasonEnum {
        Clerical,
        Fraud,
        Inquiry,
        Quality,
        Technical
    }
    enum StateEnum {
        Inquiry,
        Pending,
        Won,
        Lost,
        Arbitration
    }
}
