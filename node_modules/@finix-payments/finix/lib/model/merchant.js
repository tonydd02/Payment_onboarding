"use strict";
/**
 * Finix API
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Merchant = void 0;
class Merchant {
    static getAttributeTypeMap() {
        return Merchant.attributeTypeMap;
    }
}
exports.Merchant = Merchant;
Merchant.discriminator = undefined;
Merchant.attributeTypeMap = [
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "createdAt",
        "baseName": "created_at",
        "type": "Date"
    },
    {
        "name": "updatedAt",
        "baseName": "updated_at",
        "type": "Date"
    },
    {
        "name": "application",
        "baseName": "application",
        "type": "string"
    },
    {
        "name": "cardCvvRequired",
        "baseName": "card_cvv_required",
        "type": "boolean"
    },
    {
        "name": "cardExpirationDateRequired",
        "baseName": "card_expiration_date_required",
        "type": "boolean"
    },
    {
        "name": "creatingTransferFromReportEnabled",
        "baseName": "creating_transfer_from_report_enabled",
        "type": "boolean"
    },
    {
        "name": "convenienceChargesEnabled",
        "baseName": "convenience_charges_enabled",
        "type": "boolean"
    },
    {
        "name": "feeReadyToSettleUpon",
        "baseName": "fee_ready_to_settle_upon",
        "type": "string"
    },
    {
        "name": "grossSettlementEnabled",
        "baseName": "gross_settlement_enabled",
        "type": "boolean"
    },
    {
        "name": "identity",
        "baseName": "identity",
        "type": "string"
    },
    {
        "name": "levelTwoLevelThreeDataEnabled",
        "baseName": "level_two_level_three_data_enabled",
        "type": "boolean"
    },
    {
        "name": "mcc",
        "baseName": "mcc",
        "type": "string"
    },
    {
        "name": "merchantName",
        "baseName": "merchant_name",
        "type": "string"
    },
    {
        "name": "merchantProfile",
        "baseName": "merchant_profile",
        "type": "string"
    },
    {
        "name": "mid",
        "baseName": "mid",
        "type": "string"
    },
    {
        "name": "onboardingState",
        "baseName": "onboarding_state",
        "type": "Merchant.OnboardingStateEnum"
    },
    {
        "name": "processor",
        "baseName": "processor",
        "type": "string"
    },
    {
        "name": "processorDetails",
        "baseName": "processor_details",
        "type": "MerchantProcessorDetails"
    },
    {
        "name": "processingEnabled",
        "baseName": "processing_enabled",
        "type": "boolean"
    },
    {
        "name": "readyToSettleUpon",
        "baseName": "ready_to_settle_upon",
        "type": "string"
    },
    {
        "name": "rentSurchargesEnabled",
        "baseName": "rent_surcharges_enabled",
        "type": "boolean"
    },
    {
        "name": "settlementEnabled",
        "baseName": "settlement_enabled",
        "type": "boolean"
    },
    {
        "name": "settlementFundingIdentifier",
        "baseName": "settlement_funding_identifier",
        "type": "string"
    },
    {
        "name": "tags",
        "baseName": "tags",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "verification",
        "baseName": "verification",
        "type": "string"
    },
    {
        "name": "links",
        "baseName": "_links",
        "type": "MerchantLinks"
    }
];
(function (Merchant) {
    let OnboardingStateEnum;
    (function (OnboardingStateEnum) {
        OnboardingStateEnum[OnboardingStateEnum["Provisioning"] = 'PROVISIONING'] = "Provisioning";
        OnboardingStateEnum[OnboardingStateEnum["Approved"] = 'APPROVED'] = "Approved";
        OnboardingStateEnum[OnboardingStateEnum["Rejected"] = 'REJECTED'] = "Rejected";
    })(OnboardingStateEnum = Merchant.OnboardingStateEnum || (Merchant.OnboardingStateEnum = {}));
})(Merchant = exports.Merchant || (exports.Merchant = {}));
//# sourceMappingURL=merchant.js.map